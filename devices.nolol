unParse[Times[Null, region[AudioSignalDeviceMark1, {{comment[Will start to play sound queue when set to 1 and stop when set to 0. Range: 0, 1], define[AudioSignalDeviceMark1_SoundOn, :SoundOn]}, {comment[Controls the comparison type: -1 : less 0 : equal 1 : greater Range: -1, 0, 1], define[AudioSignalDeviceMark1_TriggerRule, :TriggerRule]}, {comment[Value, which InputValue will be compared against. Range: any], define[AudioSignalDeviceMark1_TriggerValue, :TriggerValue]}, {comment[Value, which will be compared against TriggerValue . Range: any], define[AudioSignalDeviceMark1_InputValue, :InputValue]}, {comment[], define[AudioSignalDeviceMark1_SoundCategory, :SoundCategory]}, {comment[The sound that will be played. Range: 0 - 99], define[AudioSignalDeviceMark1_SoundType, :SoundType]}, {comment[The delay between each played sound. Range: 0 - 100], define[AudioSignalDeviceMark1_RetriggerRate, :RetriggerRate]}, {comment[Limits how often the sound is repeated. Sound is repeated indefinitely if set to 0. Range: 0 - 99], define[AudioSignalDeviceMark1_RetriggerAmount, :RetriggerAmount]}, {comment[0 - 99], define[AudioSignalDeviceMark1_Priority, :Priority]}, {comment[0 - 200], define[AudioSignalDeviceMark1_Radius, :Radius]}}]]]

unParse[Times[Null, region[Battery, {{comment[Batteries with a lower priority get used first], define[Battery_BatteryPriority, :BatteryPriority]}, {comment[Current charge level of the battery Range: 0 - 10 000], define[Battery_StoredBatteryPower, :StoredBatteryPower]}, {comment[Maximum charge level of the battery Range: 10 000], define[Battery_MaxBatteryPower, :MaxBatteryPower]}}]]]

unParse[Times[Null, region[BoxThruster, {{comment[Requested output of the thruster Range: 0 - 10 000], define[BoxThruster_ThrusterState, :ThrusterState]}, {comment[Current output of the thruster Range: 0 - 10 000], define[BoxThruster_ThrusterCurrentThrust, :ThrusterCurrentThrust]}}]]]

unParse[Times[Null, region[BoxThrusterBody, {{comment[Requested output of the thruster Range: 0 - 10 000], define[BoxThrusterBody_ThrusterState, :ThrusterState]}, {comment[Current output of the thruster Range: 0 - 10 000], define[BoxThrusterBody_ThrusterCurrentThrust, :ThrusterCurrentThrust]}}]]]

unParse[Times[Null, region[Buttons, {{comment[The name of the field of which value the button modifies.], define[Buttons_ButtonState, :ButtonState]}, {comment[Controls the value when pressed], define[Buttons_ButtonOnStateValue, :ButtonOnStateValue]}, {comment[Controls the value when released], define[Buttons_ButtonOffStateValue, :ButtonOffStateValue]}, {comment[Controls the interaction type of the button Range: 0: Hold down and release 1: Basic Toggle (in-game button remains down while it is "on") 2: 4-state switch (in-game button returns to the unpressed position whether it is "on" or "off")], define[Buttons_ButtonStyle, :ButtonStyle]}}]]]

unParse[Times[Null, region[CargoLockBeam, {{comment[Dictates whether the beam is on or off. 0 = off, any other value = on.], define[CargoLockBeam_CargoBeamOnState, :CargoBeamOnState]}, {comment[The maximum distance from where the beam can lock onto objects. Measured in meters. Range: 0 - 1000], define[CargoLockBeam_CargoBeamSearchLength, :CargoBeamSearchLength]}, {comment[The current status of the beam, 0 = off or unlocked, 1 = touching object but unlocked, 2 = locked Range: 0 - 2], define[CargoLockBeam_CargoBeamStatus, :CargoBeamStatus]}}]]]

unParse[Times[Null, region[YOLOLChip, {{comment[Controls script execution. Negative values mean execution is paused, zero means script is being executed, and positive values mean execution will continue after the amount of line runs have passed that are equal to the value. Range: Numeric, any], define[YOLOLChip_ChipWait, :ChipWait]}}]]]

unParse[Times[Null, region[CoolantRechargeRack, {{comment[Upper limit for conversion rate for this recharge rack Range: 0 - 100], define[CoolantRechargeRack_CoolantRechargeRateLimit, :CoolantRechargeRateLimit]}, {comment[Current conversion rate for this recharge rack. Range: 0 - 100], define[CoolantRechargeRack_CoolantRechargeRate, :CoolantRechargeRate]}}]]]

unParse[Times[Null, region[CoolingRack, {{comment[Upper limit for conversion rate for this cooler Range: 0 - 100], define[CoolingRack_CoolerUnitRateLimit, :CoolerUnitRateLimit]}, {comment[Current conversion rate for this cooler. Conversion is being performed at 1 conversion * this percentage per second. Range: 0 - 100], define[CoolingRack_CoolerUnitRate, :CoolerUnitRate]}}]]]

unParse[Times[Null, region[TurretCradle, {{comment[Target pitch of the cradle Range: 0], define[TurretCradle_TurretPitch, :TurretPitch]}, {comment[Current rotation of the cradle Range: 0], define[TurretCradle_TurretCurrentPitch, :TurretCurrentPitch]}, {comment[High limit of the rotation Range: 180 / 160 on basic cradle], define[TurretCradle_MaxRotation, :MaxRotation]}, {comment[Low limit of the rotation Range: -180 / -20 on basic cradle], define[TurretCradle_MinRotation, :MinRotation]}, {comment[Target velocity with which the cradle rotates Range: 3], define[TurretCradle_TargetVelocity, :TargetVelocity]}}]]]

unParse[Times[Null, region[FastTravelGateCoreCenter, {{comment[Indicates the readiness of the warp gate core Range: 0 - 1], define[FastTravelGateCoreCenter_TravelCoreAssembled, :TravelCoreAssembled]}}]]]

unParse[Times[Null, region[FlightControlUnit, {{comment[For connecting the Main flight computer Range: All], define[FlightControlUnit_FcuMfcIO, :FcuMfcIO]}, {comment[Scales the accepted input range Range: 100], define[FlightControlUnit_FcuInputRange, :FcuInputRange]}, {comment[A "soft power switch", scales all output Range: 100], define[FlightControlUnit_FcuGeneralMultiplier, :FcuGeneralMultiplier]}, {comment[Moves the ship straight forward or combines FcuFwdBwd rotations with the forward movement Range: 0 to 100], define[FlightControlUnit_FcuForward, :FcuForward]}, {comment[Moves the ship straight backward or combines FcuFwdBwd rotations with the backward movement Range: 0 to 100], define[FlightControlUnit_FcuBackward, :FcuBackward]}, {comment[In-place pitch rotation Range: -100 to 100], define[FlightControlUnit_FcuRotationalPitch, :FcuRotationalPitch]}, {comment[In-place yaw rotation Range: -100 to 100], define[FlightControlUnit_FcuRotationalYaw, :FcuRotationalYaw]}, {comment[In-place roll rotation Range: -100 to 100], define[FlightControlUnit_FcuRotationalRoll, :FcuRotationalRoll]}, {comment[Moves the ship straight up or down Range: -100 to 100], define[FlightControlUnit_FcuUpDown, :FcuUpDown]}, {comment[Moves the ship straight right or left Range: -100 to 100], define[FlightControlUnit_FcuRightLeft, :FcuRightLeft]}, {comment[Rotation combined to forward/backward movement Range: -100 to 100], define[FlightControlUnit_FcuFwdBwdPitch, :FcuFwdBwdPitch]}, {comment[Rotation combined to forward/backward movement Range: -100 to 100], define[FlightControlUnit_FcuFwdBwdYaw, :FcuFwdBwdYaw]}, {comment[Rotation combined to forward/backward movement Range: -100 to 100], define[FlightControlUnit_FcuFwdBwdRoll, :FcuFwdBwdRoll]}}]]]

unParse[Times[Null, region[FuelChamber, {{comment[The amount of fuel currently available in this chamber's fuel rod Range: 0 - 300000], define[FuelChamber_FuelChamberFuel, :FuelChamberFuel]}, {comment[Maximum amount of fuel that can be stored in this chamber's rod, zero if no rod Range: 0 - 300000], define[FuelChamber_FuelChamberMaxFuel, :FuelChamberMaxFuel]}, {comment[Upper limit for conversion rate for this fuel chamber Range: 0 - 100], define[FuelChamber_FuelChamberUnitRateLimit, :FuelChamberUnitRateLimit]}, {comment[Current conversion rate for this fuel chamber. Conversion is being performed at 1 conversion * this percentage per second Range: 0 - 100], define[FuelChamber_FuelChamberUnitRate, :FuelChamberUnitRate]}}]]]

unParse[Times[Null, region[FuelRod, {{comment[The amount of fuel currently in this rod Range: 0 - 300000], define[FuelRod_StoredRawFuel, :StoredRawFuel]}, {comment[The maximum amount of fuel that can be stored in a fuel rod Range: 300000], define[FuelRod_MaxRawFuel, :MaxRawFuel]}}]]]

unParse[Times[Null, region[GeneratorUnit, {{comment[Upper limit for conversion rate for this generator block Range: 0 - 100], define[GeneratorUnit_GeneratorUnitRateLimit, :GeneratorUnitRateLimit]}, {comment[Current conversion rate for this generator block. Conversion is being performed at 1 conversion * this percentage per second. Range: 0 - 100], define[GeneratorUnit_GeneratorUnitRate, :GeneratorUnitRate]}}]]]

unParse[Times[Null, region[Hinges, {{comment[Input field for requested door state. 0 is closed, 1 is fully open. Range: [0,1]], define[Hinges_DoorOpenState, :DoorOpenState]}, {comment[Reports the current position of the door, on the same scale as DoorOpenState Range: [0,1]], define[Hinges_DoorCurrentState, :DoorCurrentState]}, {comment[The rotation/position the joint should be at when DoorOpenState is 1. Is measured in percents(%) relative to the maximum possible open state for prismatic joints, and degrees in hinge joints.], define[Hinges_EndAngle / EndPosition, :EndAngle / EndPosition]}, {comment[The rotation/position the joint should be at when DoorOpenState is 0. Is measured in percents(%) relative to the maximum possible open state for prismatic joints, and degrees in hinge joints.], define[Hinges_StartAngle / StartPosition, :StartAngle / StartPosition]}, {comment[The maximum velocity the joint will reach. Different joint devices have different velocity limits, and might not be able to reach the configured velocity.], define[Hinges_TargetVelocity, :TargetVelocity]}}]]]

unParse[Times[Null, region[Sliders, {{comment[Input field for requested door state. 0 is closed, 1 is fully open. Range: [0,1]], define[Sliders_DoorOpenState, :DoorOpenState]}, {comment[Reports the current position of the door, on the same scale as DoorOpenState Range: [0,1]], define[Sliders_DoorCurrentState, :DoorCurrentState]}, {comment[The rotation/position the joint should be at when DoorOpenState is 1. Is measured in percents(%) relative to the maximum possible open state for prismatic joints, and degrees in hinge joints.], define[Sliders_EndAngle / EndPosition, :EndAngle / EndPosition]}, {comment[The rotation/position the joint should be at when DoorOpenState is 0. Is measured in percents(%) relative to the maximum possible open state for prismatic joints, and degrees in hinge joints.], define[Sliders_StartAngle / StartPosition, :StartAngle / StartPosition]}, {comment[The maximum velocity the joint will reach. Different joint devices have different velocity limits, and might not be able to reach the configured velocity.], define[Sliders_TargetVelocity, :TargetVelocity]}}]]]

unParse[Times[Null, region[InformationScreen, {{comment[Input string which will be displayed on the screen Range: 364 mark string], define[InformationScreen_InfoScreenContent, :InfoScreenContent]}}]]]

unParse[Times[Null, region[Lamps, {{comment[Determines whether the light is on. 0 is off, everything else is on. Range: 0 - 1], define[Lamps_LampOn, :LampOn]}}]]]

unParse[Times[Null, region[Levers, {{comment[Lever's current state between LeverMinOutput and LeverMaxOutput Range: LeverMinOutput - LeverMaxOutput], define[Levers_LeverState, :LeverState]}, {comment[Unidirectional - Output in low end, Bidirectional - Output in left end], define[Levers_LeverMinOutput, :LeverMinOutput]}, {comment[Unidirectional - Output in high end, Bidirectional - Output in right end], define[Levers_LeverMaxOutput, :LeverMaxOutput]}, {comment[Output value when the lever is in the center], define[Levers_LeverCenterOutput, :LeverCenterOutput]}, {comment[How large is the dead zone in the center of an unidirectional lever], define[Levers_LeverCenterDeadZone, :LeverCenterDeadZone]}, {comment[How fast does (unidirectional lever reset to low end)(bidirectional lever reset to center) once released], define[Levers_LeverCenteringSpeed, :LeverCenteringSpeed]}, {comment[How fast does the lever move with binds], define[Levers_LeverBindsMoveSpeed, :LeverBindsMoveSpeed]}}]]]

unParse[Times[Null, region[MainFlightComputer, {{comment[For connecting an FCU to the MFC Range: -], define[MainFlightComputer_FcuMfcIO1, :FcuMfcIO1]}, {comment[-], define[MainFlightComputer_FcuMfcIO2, :FcuMfcIO2]}, {comment[50 fields for connecting thrusters to the MFC. These field names are set for the ships thrusters. Range: -], define[MainFlightComputer_ThrusterPowerLevel01 - 50, :ThrusterPowerLevel01 - 50]}}]]]

unParse[Times[Null, region[ManeuverThruster, {{comment[Requested output of the thruster Range: 0 - 10 000], define[ManeuverThruster_ThrusterState, :ThrusterState]}, {comment[Current output of the thruster Range: 0 - 10 000], define[ManeuverThruster_ThrusterCurrentThrust, :ThrusterCurrentThrust]}}]]]

unParse[Times[Null, region[MaterialPointScanner, {{comment[The scanner turns off when this is set to 0 and on when set to anything else Range: 0 - 1], define[MaterialPointScanner_Active, :Active]}, {comment[The current material to provide information for. Starting at 0 Range: 0 -], define[MaterialPointScanner_Index, :Index]}, {comment[The number of diferent materials the object contains Range: 0 -], define[MaterialPointScanner_ScanResults, :ScanResults]}, {comment[The material of the current 'Index' i.e. "Ukonium" Range: String], define[MaterialPointScanner_Material, :Material]}, {comment[The Volume of the current 'Index' i.e. 272 Range: 0 -], define[MaterialPointScanner_Volume, :Volume]}, {comment[Must be set to 1 to initiate a scan, auto-resets to 0 once scan is complete Range: 0 - 1], define[MaterialPointScanner_Scan, :Scan]}, {comment[Resets the stored scan result Range: 0 - 1], define[MaterialPointScanner_Reset, :Reset]}}]]]

unParse[Times[Null, region[YOLOLMemoryChip, {{comment[], define[YOLOLMemoryChip_ChipField1, :ChipField1]}, {comment[], define[YOLOLMemoryChip_ChipField2, :ChipField2]}, {comment[], define[YOLOLMemoryChip_ChipField3, :ChipField3]}, {comment[], define[YOLOLMemoryChip_ChipField4, :ChipField4]}, {comment[], define[YOLOLMemoryChip_ChipField5, :ChipField5]}, {comment[], define[YOLOLMemoryChip_ChipField6, :ChipField6]}, {comment[], define[YOLOLMemoryChip_ChipField7, :ChipField7]}, {comment[], define[YOLOLMemoryChip_ChipField8, :ChipField8]}, {comment[], define[YOLOLMemoryChip_ChipField9, :ChipField9]}, {comment[], define[YOLOLMemoryChip_ChipField10, :ChipField10]}}]]]

unParse[Times[Null, region[MemoryRelay, {{comment[On / Off, left side Range: 0 / 1], define[MemoryRelay_IsMasterEnabled, :IsMasterEnabled]}, {comment[On / Off, right side Range: 0 / 1], define[MemoryRelay_IsEnabled, :IsEnabled]}}]]]

unParse[Times[Null, region[MiningLaser, {{comment[Mining laser turns off when this is set to 0 and on when set to anything else Range: 0 - 1], define[MiningLaser_MiningLaserOn, :MiningLaserOn]}, {comment[The length of the beam. Measured in meters. Range: 0 - 20], define[MiningLaser_MiningLaserBeamLength, :MiningLaserBeamLength]}}]]]

unParse[Times[Null, region[ModularDeviceRack, {{comment[], define[ModularDeviceRack_CurrentState, :CurrentState]}, {comment[], define[ModularDeviceRack_OnState, :OnState]}, {comment[], define[ModularDeviceRack_OffState, :OffState]}, {comment[], define[ModularDeviceRack_ButtonStyle, :ButtonStyle]}}]]]

unParse[Times[Null, region[ModularDisplays, {{comment[The value to display on the progress bar], define[ModularDisplays_PanelValue, :PanelValue]}, {comment[The value at or below which the progress bar will appear empty Range: 0], define[ModularDisplays_PanelMinValue, :PanelMinValue]}, {comment[The range at or over which the progress bar will appear full(PanelMaxValue-PanelMinValue=TrueMaxValue) Range: 100], define[ModularDisplays_PaneMaxValue, :PaneMaxValue]}, {comment[The smallest increment the number and progress bar will reflect, written out as a power of 10 (i.e. 0.01 will display two decimal places) Range: 1], define[ModularDisplays_PanelVariableResolution, :PanelVariableResolution]}}]]]
unParse[Times[Null, region[ModularDisplays, {{comment[The value to display on the text panel], define[ModularDisplays_PanelValue, :PanelValue]}, {comment[The smallest increment the number and text panel will reflect, written out as a power of 10 (i.e. 0.01 will display two decimal places) Range: 1], define[ModularDisplays_PanelVariableResolution, :PanelVariableResolution]}}]]]

unParse[Times[Null, region[ModularOreCargoCrate, {{comment[Crates with a lower priority get used first], define[ModularOreCargoCrate_Priority, :Priority]}}]]]

unParse[Times[Null, region[NetworkRelay, {{comment[On / Off (Input side) Range: 0 / 1], define[NetworkRelay_IsMasterEnabled, :IsMasterEnabled]}, {comment[On / Off (Output side) Range: 0 / 1], define[NetworkRelay_IsEnabled, :IsEnabled]}}]]]

unParse[Times[Null, region[OreCollector, {{comment[Ore collector turns off when this is set to 0 and on when set to anything else Range: 0 - 1], define[OreCollector_ToggleOn, :ToggleOn]}, {comment[Determines how fast the collector collects ore, and how much power it consumes Range: 0 - 6000], define[OreCollector_Power, :Power]}}]]]

unParse[Times[Null, region[PipeSocketBoard, {{comment[Upper limit for cooling rate for pipe socket board Range: 0 - 100], define[PipeSocketBoard_RadiatorCoolingRateLimit, :RadiatorCoolingRateLimit]}, {comment[Current cooling rate for this pipe socket board. Range: 0 - 100], define[PipeSocketBoard_RadiatorCoolingRate, :RadiatorCoolingRate]}}]]]

unParse[Times[Null, region[PlasmaThruster, {{comment[Requested output of the thruster Range: 0 - 10 000], define[PlasmaThruster_ThrusterState, :ThrusterState]}, {comment[Current output of the thruster Range: 0 - 10 000], define[PlasmaThruster_ThrusterCurrentThrust, :ThrusterCurrentThrust]}, {comment[Active state of the thruster Range: 0 / 1], define[PlasmaThruster_isActive, :isActive]}, {comment[Current charge level of the thruster Range: 0 - 1], define[PlasmaThruster_chargeLevel, :chargeLevel]}}]]]

unParse[Times[Null, region[PropellantTank, {{comment[Input/output field for closing/opening connectors. Range: 0 - 1], define[PropellantTank_IsOpenId, :IsOpenId]}, {comment[Output field for resource amounts flowing through the network.], define[PropellantTank_FlowId, :FlowId]}, {comment[Amount of propellant currently available in all conected containers. Range: 0 - GasNetworkMaxResource], define[PropellantTank_GasNetworkStoredResource, :GasNetworkStoredResource]}, {comment[Maximum amount of propellant that can be stored in all conected containers.], define[PropellantTank_GasNetworkMaxResource, :GasNetworkMaxResource]}}]]]
unParse[Times[Null, region[PropellantTank, {{comment[Amount of propellant currently available in this container. Range: 0 - GasContainerMaxResource], define[PropellantTank_GasContainerStoredResource, :GasContainerStoredResource]}, {comment[Maximum amount of propellant that can be stored in this container.], define[PropellantTank_GasContainerMaxResource, :GasContainerMaxResource]}}]]]

unParse[Times[Null, region[Radiator, {{comment[Upper limit for radiation rate for this radiator base Range: 0 - 100], define[Radiator_RadiationRateLimit, :RadiationRateLimit]}, {comment[Current radiation rate for this pipe radiator base Range: 0 - 100], define[Radiator_RadiationRate, :RadiationRate]}, {comment[Current ammount of coolant in this radiator. Range: 0 - MaximumRadiatorCoolant], define[Radiator_StoredRadiatorCoolant, :StoredRadiatorCoolant]}, {comment[Maximum amount of coolant that can be stored in the radiator], define[Radiator_MaxRadiatorCoolant, :MaxRadiatorCoolant]}}]]]
unParse[Times[Null, region[Radiator, {{comment[Upper limit for radiation rate for this radiator extension Range: 0 - 100], define[Radiator_RadiationRateLimit, :RadiationRateLimit]}, {comment[Current radiation rate for this pipe radiator extension Range: 0 - 100], define[Radiator_RadiationRate, :RadiationRate]}}]]]

unParse[Times[Null, region[NavigationReceivers, {{comment[Found message Range: 0], define[NavigationReceivers_Message, :Message]}, {comment[Strength of the found signal, measured in meters Range: 0], define[NavigationReceivers_SignalStrength, :SignalStrength]}, {comment[An angle of 180 coresponds to an omnidirectional receiver. Range: 0-180], define[NavigationReceivers_ListenAngle, :ListenAngle]}, {comment[The message the receiver will exclusively listen to, 0 means listens to all Range: 0], define[NavigationReceivers_TargetMessage, :TargetMessage]}, {comment[The frequency the receiver will exclusively listen to, 0 means listens to all Range: 0], define[NavigationReceivers_TargetFrequency, :TargetFrequency]}, {comment[The frequency of the transmitter currently listened to, 0 if no signal found. Range: 0], define[NavigationReceivers_Frequency, :Frequency]}, {comment[Target pitch of the device Range: 0], define[NavigationReceivers_ReceiverPitch, :ReceiverPitch]}, {comment[Current pitch of the device Range: 0], define[NavigationReceivers_ReceiverCurrentPitch, :ReceiverCurrentPitch]}, {comment[Maximum limit for rotation Range: 180], define[NavigationReceivers_MaxRotation, :MaxRotation]}, {comment[Minimum limit for rotation Range: -180], define[NavigationReceivers_MinRotation, :MinRotation]}, {comment[Target velocity in which the device rotates Range: 0-3], define[NavigationReceivers_TargetVelocity, :TargetVelocity]}}]]]

unParse[Times[Null, region[RadioTransmitters, {{comment[Message being sent], define[RadioTransmitters_TransmitMessage, :TransmitMessage]}, {comment[Range where the message can be received Range: 1000000], define[RadioTransmitters_TransmitRange, :TransmitRange]}, {comment[The frequency channel the transmitter will send signals to. Range: 1], define[RadioTransmitters_Frequency, :Frequency]}}]]]

unParse[Times[Null, region[RailMover, {{comment[Target velocity of the rail mover in m/s], define[RailMover_speed, :speed]}, {comment[If we cross a rail trigger that is configured to emit values read from the mover, it reads from this field.], define[RailMover_RailMoverTriggerValue, :RailMoverTriggerValue]}}]]]

unParse[Times[Null, region[RailRelay, {{comment[On/Off Range: 0/1], define[RailRelay_IsEnabled, :IsEnabled]}}]]]

unParse[Times[Null, region[RailTrigger, {{comment[The output field the trigger writes to. Range: None], define[RailTrigger_RailTriggerOutput, :RailTriggerOutput]}, {comment[Value written to RailTriggerOutput when a rail mover passes over.], define[RailTrigger_RailTriggerValue, :RailTriggerValue]}, {comment[If non-zero, will read the rail mover's RailMoverTriggerValue field and emit that instead of the trigger's RailTriggerValue .], define[RailTrigger_RailTriggerReadMover, :RailTriggerReadMover]}}]]]

unParse[Times[Null, region[Rangefinder, {{comment[Whether the range finder should try to be on. 0 is off, everything else is on.], define[Rangefinder_RangeFinderOnState, :RangeFinderOnState]}, {comment[The maximum distance to check for hits, up to the device's maximum. Measured in meters. Range: 0 - 1000], define[Rangefinder_RangeFinderSearchLength, :RangeFinderSearchLength]}, {comment[The output field which reports the distance the laser goes. Measured in meters.], define[Rangefinder_RangeFinderDistance, :RangeFinderDistance]}}]]]

unParse[Times[Null, region[ResourceBridge, {{comment[Dictates whether the resource bridge is on or off. 0 = off, any other value = on. Range: 0 - 1], define[ResourceBridge_State, :State]}, {comment[Dictates whether the resource bridge can accept resources. Range: 0 - 1], define[ResourceBridge_FlowIn, :FlowIn]}, {comment[Dictates whether the resource bridge can send resources. Range: 0 - 1], define[ResourceBridge_FlowOut, :FlowOut]}}]]]

unParse[Times[Null, region[RoboticArms, {{comment[Telescoping arm target length Range: [0,100]: percent of maximum extension], define[RoboticArms_TargetArmLength, :TargetArmLength]}, {comment[Current arm length updated during arm movement Range: [0,100]: percent of maximum extension], define[RoboticArms_CurrentArmLength, :CurrentArmLength]}, {comment[Extension at maximum arm length], define[RoboticArms_EndPosition, :EndPosition]}, {comment[Extension at minimim arm length], define[RoboticArms_StartPosition, :StartPosition]}, {comment[Target velocity of telescoping movement], define[RoboticArms_TargetVelocity, :TargetVelocity]}}]]]
unParse[Times[Null, region[RoboticArms, {{comment[Rotating joint target angle Range: [-180,180]: degrees], define[RoboticArms_TargetArmAngle, :TargetArmAngle]}, {comment[Rotating joint current angle updated during arm rotation Range: [-180,180]: degrees], define[RoboticArms_CurrentArmAngle, :CurrentArmAngle]}, {comment[Maximum rotation], define[RoboticArms_MaxRotation, :MaxRotation]}, {comment[Minimum rotation], define[RoboticArms_MinRotation, :MinRotation]}, {comment[Target velocity of rotation], define[RoboticArms_TargetVelocity, :TargetVelocity]}}]]]

unParse[Times[Null, region[ShipDiagnosticScanner, {{comment[The scanner turns off when this is set to 0 and on when set to anything else Range: 0 - 1], define[ShipDiagnosticScanner_Active, :Active]}, {comment[The current warp class of the ship Range: 0 - Infinity], define[ShipDiagnosticScanner_WarpClass, :WarpClass]}, {comment[The number of durability errors the ship currently has Range: X], define[ShipDiagnosticScanner_DurabilityErrors, :DurabilityErrors]}}]]]

unParse[Times[Null, region[ShipTransponder, {{comment[On/off Range: 0 - 1], define[ShipTransponder_transponderActive, :transponderActive]}, {comment[Owner of transponder/ship. Filled at creation Range: string], define[ShipTransponder_transponderOwner, :transponderOwner]}, {comment[Name of ship that transponder is tied to. Filled at creation Range: string], define[ShipTransponder_transponderShipName, :transponderShipName]}, {comment[Is the transponder inside a safezone? Range: 0 - 1], define[ShipTransponder_insideSafezone, :insideSafezone]}, {comment[Can this ship currently be damaged by players? Range: 0 - 1], define[ShipTransponder_playerDamage, :playerDamage]}, {comment[Can this ship currently be damaged by other ships? Range: 0 - 1], define[ShipTransponder_shipDamage, :shipDamage]}, {comment[Can this ship currently be damaged by collisions? Range: 0 - 1], define[ShipTransponder_collisionDamage, :collisionDamage]}, {comment[Can a new station be constructed in the current area? Range: 0 - 1], define[ShipTransponder_stationsAllowed, :stationsAllowed]}}]]]

unParse[Times[Null, region[SocketBoard, {{comment[Upper limit for conversion rate for this socket Range: 0 - 100], define[SocketBoard_SocketUnitRateLimit, :SocketUnitRateLimit]}, {comment[Current conversion rate for this socket. Conversion is being performed at 1 conversion * this percentage per second. Range: 0 - 100], define[SocketBoard_SocketUnitRate, :SocketUnitRate]}}]]]

unParse[Times[Null, region[SolarPanelLightSensor, {{comment[Whether the sensor is currently facing a viable source of light Range: 0 - 1], define[SolarPanelLightSensor_LightDetected, :LightDetected]}, {comment[Vertical offset of the panel to the source of light, in degrees Range: -90 - 90], define[SolarPanelLightSensor_LightOffsetVertical, :LightOffsetVertical]}, {comment[Horizontal offset of the panel to the source of light, in degrees Range: -90 - 90], define[SolarPanelLightSensor_LightOffsetHorizontal, :LightOffsetHorizontal]}}]]]

unParse[Times[Null, region[SolarPowerConverter, {{comment[Usage priority for the device Range: 0 - 1], define[SolarPowerConverter_ConverterPriority, :ConverterPriority]}, {comment[Power generated after performing the conversion process Range: Infinity], define[SolarPowerConverter_ConverterOutput, :ConverterOutput]}, {comment[Total surface area of attached solar panels Range: Number expressed in square meters], define[SolarPowerConverter_ArrayAreaTotal, :ArrayAreaTotal]}}]]]

unParse[Times[Null, region[Thrusters, {{comment[Requested output of the thruster Range: 0 - 10 000], define[Thrusters_ThrusterState, :ThrusterState]}, {comment[Current output of the thruster Range: 0 - 10 000], define[Thrusters_ThrusterCurrentThrust, :ThrusterCurrentThrust]}}]]]
unParse[Times[Null, region[Thrusters, {{comment[1 = charge ; 0 = discharge Range: /], define[Thrusters_isactive, :isactive]}, {comment[the current charge level of the plasma thruster, must be 1 to produce thrust Range: 0 - 1], define[Thrusters_chargelevel, :chargelevel]}}]]]

unParse[Times[Null, region[TorpedoLauncher, {{comment[Identifier of tube Range: X], define[TorpedoLauncher_tube, :tube]}, {comment[Should the launcher's torpedo be locked in place? Range: 0 - 1], define[TorpedoLauncher_LauncherLock, :LauncherLock]}, {comment[Which torpedo tube is currently selected and thus is ready to fire Range: X], define[TorpedoLauncher_selectedTube, :selectedTube]}, {comment[Status of the tube's magazine Range: "Empty" / "Locked"], define[TorpedoLauncher_tubeStatus, :tubeStatus]}, {comment[Launch the currently selected torpedo Range: 0 - 1], define[TorpedoLauncher_launchTorpedo, :launchTorpedo]}}]]]

unParse[Times[Null, region[TractorBeam, {{comment[Beam on/off Range: 1 or 0], define[TractorBeam_tractorBeamOnState, :tractorBeamOnState]}, {comment[When set to 1, brings the object grabbed by the beam to a stop, then turns off the beam Range: 1 or 0], define[TractorBeam_tractorBeamSoftRelease, :tractorBeamSoftRelease]}, {comment[When set to 1, tractor beam tries to snap held object to nearby objects Range: 1 or 0], define[TractorBeam_tractorBeamSnapToObjects, :tractorBeamSnapToObjects]}, {comment[Length (meters) of the beam when the beam is not attached to anything. Max range of the beam. Range: -], define[TractorBeam_tractorBeamSearchLength, :tractorBeamSearchLength]}, {comment[Maximum amount of force (Newtons) the beam will try to apply to grabbed object. Range: -], define[TractorBeam_tractorBeamForce, :tractorBeamForce]}, {comment[Maximum amount of torque (Newtons) the beam will try to apply to grabbed object. Range: -], define[TractorBeam_tractorBeamTorque, :tractorBeamTorque]}, {comment[The distance (meters) the beam tries to move a held object to. Resets on grab, but does not message network / other devices. Range: -], define[TractorBeam_tractorBeamPosition, :tractorBeamPosition]}, {comment[The yaw (degrees) the beam tries to move a held object to, relative to the base. Resets on grab, but does not message network / other devices. Range: -], define[TractorBeam_tractorBeamYaw, :tractorBeamYaw]}, {comment[The pitch (degrees) the beam tries to move a held object to, relative to the base. Resets on grab, but does not message network / other devices. Range: -], define[TractorBeam_tractorBeamPitch, :tractorBeamPitch]}, {comment[The roll (degrees) the beam tries to move a held object to, relative to the base. Resets on grab, but does not message network / other devices. Range: -], define[TractorBeam_tractorBeamRoll, :tractorBeamRoll]}, {comment[Indicates whether an object is grabbed by the beam. Range: 1 or 0], define[TractorBeam_tractorBeamObjectInBeam, :tractorBeamObjectInBeam]}, {comment[Indicates the force (Newtons) currently being applied to the grabbed object. Can be used to detect when the grabbed object has been set to the target position. Range: -], define[TractorBeam_tractorBeamForceApplied, :tractorBeamForceApplied]}, {comment[Indicates the torque (Newtons) currently being applied to the grabbed object. Can be used to detect when the grabbed object has been set to the target rotation. Range: -], define[TractorBeam_tractorBeamTorqueApplied, :tractorBeamTorqueApplied]}}]]]

unParse[Times[Null, region[TriangleThruster, {{comment[Requested output of the thruster Range: 0 - 10 000], define[TriangleThruster_ThrusterState, :ThrusterState]}, {comment[Current output of the thruster Range: 0 - 10 000], define[TriangleThruster_ThrusterCurrentThrust, :ThrusterCurrentThrust]}}]]]

unParse[Times[Null, region[TriangleThrusterBody, {{comment[Requested output of the thruster Range: 0 - 10 000], define[TriangleThrusterBody_ThrusterState, :ThrusterState]}, {comment[Current output of the thruster Range: 0 - 10 000], define[TriangleThrusterBody_ThrusterCurrentThrust, :ThrusterCurrentThrust]}}]]]

unParse[Times[Null, region[Turntable, {{comment[Target rotation of the turntable Range: 0], define[Turntable_TurretRotation, :TurretRotation]}, {comment[Current rotation of the turntable Range: 0], define[Turntable_TurretCurrentRotation, :TurretCurrentRotation]}, {comment[High limit of the rotation Range: 180], define[Turntable_MaxRotation, :MaxRotation]}, {comment[Low limit of the rotation Range: -180], define[Turntable_MinRotation, :MinRotation]}, {comment[Target velocity in which the turntable rotates Range: 3], define[Turntable_TargetVelocity, :TargetVelocity]}}]]]

unParse[Times[Null, region[UtilityToolCapacitor, {{comment[How much power is stored in the utility ammo Range: 0 - 4000], define[UtilityToolCapacitor_StoredLocalPower, :StoredLocalPower]}, {comment[Maximum amount of power ammo that can be stored Range: 4000], define[UtilityToolCapacitor_MaxLocalPower, :MaxLocalPower]}}]]]